
ESE519 LAB2-2.4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000007ac  00000840  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800104  00800104  00000844  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000844  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000874  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009fa  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007fc  00000000  00000000  000012fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046b  00000000  00000000  00001afa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  00001f68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000438  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fa  00000000  00000000  00002468  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002662  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 83 01 	jmp	0x306	; 0x306 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ea       	ldi	r30, 0xAC	; 172
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 30       	cpi	r26, 0x0B	; 11
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  9e:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <putstring>:
uint16_t adc_read()
{
	//ADCSRA |= (1<<ADSC);// wait for conversion to complete.
	//while(ADCSRA & (1<<ADSC));
	return(ADC);
}
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	fc 01       	movw	r30, r24
  ac:	20 81       	ld	r18, Z
  ae:	22 23       	and	r18, r18
  b0:	69 f0       	breq	.+26     	; 0xcc <putstring+0x26>
  b2:	dc 01       	movw	r26, r24
  b4:	11 96       	adiw	r26, 0x01	; 1
  b6:	e0 ec       	ldi	r30, 0xC0	; 192
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	c6 ec       	ldi	r28, 0xC6	; 198
  bc:	d0 e0       	ldi	r29, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	95 ff       	sbrs	r25, 5
  c2:	fd cf       	rjmp	.-6      	; 0xbe <putstring+0x18>
  c4:	28 83       	st	Y, r18
  c6:	2d 91       	ld	r18, X+
  c8:	21 11       	cpse	r18, r1
  ca:	f9 cf       	rjmp	.-14     	; 0xbe <putstring+0x18>
  cc:	df 91       	pop	r29
  ce:	cf 91       	pop	r28
  d0:	08 95       	ret

000000d2 <putnum>:
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	60 97       	sbiw	r28, 0x10	; 16
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	f8 94       	cli
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	cd bf       	out	0x3d, r28	; 61
  e6:	4a e0       	ldi	r20, 0x0A	; 10
  e8:	be 01       	movw	r22, r28
  ea:	6f 5f       	subi	r22, 0xFF	; 255
  ec:	7f 4f       	sbci	r23, 0xFF	; 255
  ee:	0e 94 9f 03 	call	0x73e	; 0x73e <__itoa_ncheck>
  f2:	ce 01       	movw	r24, r28
  f4:	01 96       	adiw	r24, 0x01	; 1
  f6:	0e 94 53 00 	call	0xa6	; 0xa6 <putstring>
  fa:	60 96       	adiw	r28, 0x10	; 16
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	f8 94       	cli
 100:	de bf       	out	0x3e, r29	; 62
 102:	0f be       	out	0x3f, r0	; 63
 104:	cd bf       	out	0x3d, r28	; 61
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <adc_init>:
 10c:	ec e7       	ldi	r30, 0x7C	; 124
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 64       	ori	r24, 0x40	; 64
 114:	80 83       	st	Z, r24
 116:	ea e7       	ldi	r30, 0x7A	; 122
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	87 e8       	ldi	r24, 0x87	; 135
 11c:	80 83       	st	Z, r24
 11e:	80 81       	ld	r24, Z
 120:	80 62       	ori	r24, 0x20	; 32
 122:	80 83       	st	Z, r24
 124:	80 81       	ld	r24, Z
 126:	80 64       	ori	r24, 0x40	; 64
 128:	80 83       	st	Z, r24
 12a:	08 95       	ret

0000012c <main>:

int main(void)
{
	DDRB |= (1 << PORTB1);
 12c:	21 9a       	sbi	0x04, 1	; 4
	TCCR0A = (1 << WGM01); //Set CTC Bit
 12e:	92 e0       	ldi	r25, 0x02	; 2
 130:	94 bd       	out	0x24, r25	; 36
	TIMSK0 |= (1 << OCIE0A);
 132:	ee e6       	ldi	r30, 0x6E	; 110
 134:	f0 e0       	ldi	r31, 0x00	; 0
 136:	80 81       	ld	r24, Z
 138:	82 60       	ori	r24, 0x02	; 2
 13a:	80 83       	st	Z, r24
	sei();
 13c:	78 94       	sei
	TCCR0B |=  (1 << CS00) | (1 << CS01);
 13e:	85 b5       	in	r24, 0x25	; 37
 140:	83 60       	ori	r24, 0x03	; 3
 142:	85 bd       	out	0x25, r24	; 37
	
	TIMSK1 |= (1 << ICIE1);
 144:	ef e6       	ldi	r30, 0x6F	; 111
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	80 62       	ori	r24, 0x20	; 32
 14c:	80 83       	st	Z, r24
	TCCR1B |= (1 << ICES1);
 14e:	e1 e8       	ldi	r30, 0x81	; 129
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	80 64       	ori	r24, 0x40	; 64
 156:	80 83       	st	Z, r24
	
	UCSR0A = (1<<U2X0); // double speed mode
 158:	90 93 c0 00 	sts	0x00C0, r25	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UBRR0H = (unsigned char) ((F_CPU/8/BAUDRATE-1) >> 8);
 15c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) (F_CPU/8/BAUDRATE-1);
 160:	8f ec       	ldi	r24, 0xCF	; 207
 162:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0) | (1<<TXEN0); // enable rx and tx
 166:	88 e1       	ldi	r24, 0x18	; 24
 168:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	//float tick;
	adc_init();// initialize adc
 16c:	0e 94 86 00 	call	0x10c	; 0x10c <adc_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 170:	2f ef       	ldi	r18, 0xFF	; 255
 172:	80 e7       	ldi	r24, 0x70	; 112
 174:	92 e0       	ldi	r25, 0x02	; 2
 176:	21 50       	subi	r18, 0x01	; 1
 178:	80 40       	sbci	r24, 0x00	; 0
 17a:	90 40       	sbci	r25, 0x00	; 0
 17c:	e1 f7       	brne	.-8      	; 0x176 <main+0x4a>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0x54>
 180:	00 00       	nop
}
uint16_t adc_read()
{
	//ADCSRA |= (1<<ADSC);// wait for conversion to complete.
	//while(ADCSRA & (1<<ADSC));
	return(ADC);
 182:	c8 e7       	ldi	r28, 0x78	; 120
 184:	d0 e0       	ldi	r29, 0x00	; 0
			}
			if((adc_result<=896) & (adc_result>768)){
				OCR0A = 64;
			}
			if(adc_result>896){
				OCR0A = 60;
 186:	0f 2e       	mov	r0, r31
 188:	fc e3       	ldi	r31, 0x3C	; 60
 18a:	af 2e       	mov	r10, r31
 18c:	f0 2d       	mov	r31, r0
			}
			if((adc_result<=768) & (adc_result>640)){
				OCR0A = 71;
			}
			if((adc_result<=896) & (adc_result>768)){
				OCR0A = 64;
 18e:	68 94       	set
 190:	bb 24       	eor	r11, r11
 192:	b6 f8       	bld	r11, 6
			}
			if((adc_result<=640) & (adc_result>512)){
				OCR0A = 80;
			}
			if((adc_result<=768) & (adc_result>640)){
				OCR0A = 71;
 194:	0f 2e       	mov	r0, r31
 196:	f7 e4       	ldi	r31, 0x47	; 71
 198:	cf 2e       	mov	r12, r31
 19a:	f0 2d       	mov	r31, r0
			}
			if((adc_result<=512) & (adc_result>384)){
				OCR0A = 90;
			}
			if((adc_result<=640) & (adc_result>512)){
				OCR0A = 80;
 19c:	0f 2e       	mov	r0, r31
 19e:	f0 e5       	ldi	r31, 0x50	; 80
 1a0:	df 2e       	mov	r13, r31
 1a2:	f0 2d       	mov	r31, r0
			}
			if((adc_result<=384) & (adc_result>256)){
				OCR0A = 95;
			}
			if((adc_result<=512) & (adc_result>384)){
				OCR0A = 90;
 1a4:	0f 2e       	mov	r0, r31
 1a6:	fa e5       	ldi	r31, 0x5A	; 90
 1a8:	ef 2e       	mov	r14, r31
 1aa:	f0 2d       	mov	r31, r0
			}
			if((adc_result<=256) & (adc_result>128)){
				OCR0A = 107;
			}
			if((adc_result<=384) & (adc_result>256)){
				OCR0A = 95;
 1ac:	0f 2e       	mov	r0, r31
 1ae:	ff e5       	ldi	r31, 0x5F	; 95
 1b0:	ff 2e       	mov	r15, r31
 1b2:	f0 2d       	mov	r31, r0
			adc_result = adc_read();
			if(adc_result<=128){
				OCR0A = 120;
			}
			if((adc_result<=256) & (adc_result>128)){
				OCR0A = 107;
 1b4:	0b e6       	ldi	r16, 0x6B	; 107
		}
		else
		{
			adc_result = adc_read();
			if(adc_result<=128){
				OCR0A = 120;
 1b6:	18 e7       	ldi	r17, 0x78	; 120
	//float tick;
	adc_init();// initialize adc
	_delay_ms(50);
	while(1)
	{
		if(button)
 1b8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 1bc:	88 23       	and	r24, r24
 1be:	09 f4       	brne	.+2      	; 0x1c2 <main+0x96>
 1c0:	4a c0       	rjmp	.+148    	; 0x256 <main+0x12a>
}
uint16_t adc_read()
{
	//ADCSRA |= (1<<ADSC);// wait for conversion to complete.
	//while(ADCSRA & (1<<ADSC));
	return(ADC);
 1c2:	68 81       	ld	r22, Y
 1c4:	79 81       	ldd	r23, Y+1	; 0x01
	_delay_ms(50);
	while(1)
	{
		if(button)
		{
			adc_result = adc_read();
 1c6:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <adc_result+0x1>
 1ca:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <adc_result>
			tick = floor(((-120.0 * adc_result)/1024 + 239)/2);
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0e 94 4c 02 	call	0x498	; 0x498 <__floatunsisf>
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	40 ef       	ldi	r20, 0xF0	; 240
 1dc:	52 ec       	ldi	r21, 0xC2	; 194
 1de:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3>
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	40 e8       	ldi	r20, 0x80	; 128
 1e8:	5a e3       	ldi	r21, 0x3A	; 58
 1ea:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3>
 1ee:	20 e0       	ldi	r18, 0x00	; 0
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	4f e6       	ldi	r20, 0x6F	; 111
 1f4:	53 e4       	ldi	r21, 0x43	; 67
 1f6:	0e 94 aa 01 	call	0x354	; 0x354 <__addsf3>
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	30 e0       	ldi	r19, 0x00	; 0
 1fe:	40 e0       	ldi	r20, 0x00	; 0
 200:	5f e3       	ldi	r21, 0x3F	; 63
 202:	0e 94 32 03 	call	0x664	; 0x664 <__mulsf3>
 206:	0e 94 89 02 	call	0x512	; 0x512 <floor>
 20a:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <tick>
 20e:	70 93 08 01 	sts	0x0108, r23	; 0x800108 <tick+0x1>
 212:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <tick+0x2>
 216:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <tick+0x3>
			putnum(tick);
 21a:	0e 94 16 02 	call	0x42c	; 0x42c <__fixsfsi>
 21e:	cb 01       	movw	r24, r22
 220:	0e 94 69 00 	call	0xd2	; 0xd2 <putnum>
			putstring(" \r\n");
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	0e 94 53 00 	call	0xa6	; 0xa6 <putstring>
			OCR0A = tick;
 22c:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <tick>
 230:	70 91 08 01 	lds	r23, 0x0108	; 0x800108 <tick+0x1>
 234:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <tick+0x2>
 238:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <tick+0x3>
 23c:	0e 94 1d 02 	call	0x43a	; 0x43a <__fixunssfsi>
 240:	67 bd       	out	0x27, r22	; 39
 242:	2f ef       	ldi	r18, 0xFF	; 255
 244:	80 e7       	ldi	r24, 0x70	; 112
 246:	92 e0       	ldi	r25, 0x02	; 2
 248:	21 50       	subi	r18, 0x01	; 1
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	90 40       	sbci	r25, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <main+0x11c>
 250:	00 c0       	rjmp	.+0      	; 0x252 <main+0x126>
 252:	00 00       	nop
 254:	b1 cf       	rjmp	.-158    	; 0x1b8 <main+0x8c>
}
uint16_t adc_read()
{
	//ADCSRA |= (1<<ADSC);// wait for conversion to complete.
	//while(ADCSRA & (1<<ADSC));
	return(ADC);
 256:	88 81       	ld	r24, Y
 258:	99 81       	ldd	r25, Y+1	; 0x01
			_delay_ms(50);
			//sprintf("%d\n",adc_result);
		}
		else
		{
			adc_result = adc_read();
 25a:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <adc_result+0x1>
 25e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <adc_result>
			if(adc_result<=128){
 262:	81 38       	cpi	r24, 0x81	; 129
 264:	91 05       	cpc	r25, r1
 266:	08 f4       	brcc	.+2      	; 0x26a <main+0x13e>
				OCR0A = 120;
 268:	17 bd       	out	0x27, r17	; 39
			}
			if((adc_result<=256) & (adc_result>128)){
 26a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 26e:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 272:	81 58       	subi	r24, 0x81	; 129
 274:	91 09       	sbc	r25, r1
 276:	80 38       	cpi	r24, 0x80	; 128
 278:	91 05       	cpc	r25, r1
 27a:	08 f4       	brcc	.+2      	; 0x27e <main+0x152>
				OCR0A = 107;
 27c:	07 bd       	out	0x27, r16	; 39
			}
			if((adc_result<=384) & (adc_result>256)){
 27e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 282:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 286:	81 50       	subi	r24, 0x01	; 1
 288:	91 40       	sbci	r25, 0x01	; 1
 28a:	80 38       	cpi	r24, 0x80	; 128
 28c:	91 05       	cpc	r25, r1
 28e:	08 f4       	brcc	.+2      	; 0x292 <main+0x166>
				OCR0A = 95;
 290:	f7 bc       	out	0x27, r15	; 39
			}
			if((adc_result<=512) & (adc_result>384)){
 292:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 296:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 29a:	81 58       	subi	r24, 0x81	; 129
 29c:	91 40       	sbci	r25, 0x01	; 1
 29e:	80 38       	cpi	r24, 0x80	; 128
 2a0:	91 05       	cpc	r25, r1
 2a2:	08 f4       	brcc	.+2      	; 0x2a6 <main+0x17a>
				OCR0A = 90;
 2a4:	e7 bc       	out	0x27, r14	; 39
			}
			if((adc_result<=640) & (adc_result>512)){
 2a6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 2aa:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 2ae:	81 50       	subi	r24, 0x01	; 1
 2b0:	92 40       	sbci	r25, 0x02	; 2
 2b2:	80 38       	cpi	r24, 0x80	; 128
 2b4:	91 05       	cpc	r25, r1
 2b6:	08 f4       	brcc	.+2      	; 0x2ba <main+0x18e>
				OCR0A = 80;
 2b8:	d7 bc       	out	0x27, r13	; 39
			}
			if((adc_result<=768) & (adc_result>640)){
 2ba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 2be:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 2c2:	81 58       	subi	r24, 0x81	; 129
 2c4:	92 40       	sbci	r25, 0x02	; 2
 2c6:	80 38       	cpi	r24, 0x80	; 128
 2c8:	91 05       	cpc	r25, r1
 2ca:	08 f4       	brcc	.+2      	; 0x2ce <main+0x1a2>
				OCR0A = 71;
 2cc:	c7 bc       	out	0x27, r12	; 39
			}
			if((adc_result<=896) & (adc_result>768)){
 2ce:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 2d2:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 2d6:	81 50       	subi	r24, 0x01	; 1
 2d8:	93 40       	sbci	r25, 0x03	; 3
 2da:	80 38       	cpi	r24, 0x80	; 128
 2dc:	91 05       	cpc	r25, r1
 2de:	08 f4       	brcc	.+2      	; 0x2e2 <main+0x1b6>
				OCR0A = 64;
 2e0:	b7 bc       	out	0x27, r11	; 39
			}
			if(adc_result>896){
 2e2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <adc_result>
 2e6:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <adc_result+0x1>
 2ea:	81 38       	cpi	r24, 0x81	; 129
 2ec:	93 40       	sbci	r25, 0x03	; 3
 2ee:	08 f0       	brcs	.+2      	; 0x2f2 <main+0x1c6>
				OCR0A = 60;
 2f0:	a7 bc       	out	0x27, r10	; 39
 2f2:	8f ef       	ldi	r24, 0xFF	; 255
 2f4:	90 e7       	ldi	r25, 0x70	; 112
 2f6:	22 e0       	ldi	r18, 0x02	; 2
 2f8:	81 50       	subi	r24, 0x01	; 1
 2fa:	90 40       	sbci	r25, 0x00	; 0
 2fc:	20 40       	sbci	r18, 0x00	; 0
 2fe:	e1 f7       	brne	.-8      	; 0x2f8 <main+0x1cc>
 300:	00 c0       	rjmp	.+0      	; 0x302 <main+0x1d6>
 302:	00 00       	nop
 304:	59 cf       	rjmp	.-334    	; 0x1b8 <main+0x8c>

00000306 <__vector_14>:
	}
	
}

ISR(TIMER0_COMPA_vect)
{
 306:	1f 92       	push	r1
 308:	0f 92       	push	r0
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	0f 92       	push	r0
 30e:	11 24       	eor	r1, r1
 310:	8f 93       	push	r24
 312:	9f 93       	push	r25
	PORTB ^= (1 << PORTB1);
 314:	95 b1       	in	r25, 0x05	; 5
 316:	82 e0       	ldi	r24, 0x02	; 2
 318:	89 27       	eor	r24, r25
 31a:	85 b9       	out	0x05, r24	; 5
}
 31c:	9f 91       	pop	r25
 31e:	8f 91       	pop	r24
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__vector_10>:

ISR(TIMER1_CAPT_vect)
{
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	0f 92       	push	r0
 332:	11 24       	eor	r1, r1
 334:	8f 93       	push	r24
 336:	9f 93       	push	r25
	button = !button;
 338:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__data_end>
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	89 27       	eor	r24, r25
 340:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
}
 344:	9f 91       	pop	r25
 346:	8f 91       	pop	r24
 348:	0f 90       	pop	r0
 34a:	0f be       	out	0x3f, r0	; 63
 34c:	0f 90       	pop	r0
 34e:	1f 90       	pop	r1
 350:	18 95       	reti

00000352 <__subsf3>:
 352:	50 58       	subi	r21, 0x80	; 128

00000354 <__addsf3>:
 354:	bb 27       	eor	r27, r27
 356:	aa 27       	eor	r26, r26
 358:	0e 94 c1 01 	call	0x382	; 0x382 <__addsf3x>
 35c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 360:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 364:	38 f0       	brcs	.+14     	; 0x374 <__addsf3+0x20>
 366:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 36a:	20 f0       	brcs	.+8      	; 0x374 <__addsf3+0x20>
 36c:	39 f4       	brne	.+14     	; 0x37c <__addsf3+0x28>
 36e:	9f 3f       	cpi	r25, 0xFF	; 255
 370:	19 f4       	brne	.+6      	; 0x378 <__addsf3+0x24>
 372:	26 f4       	brtc	.+8      	; 0x37c <__addsf3+0x28>
 374:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 378:	0e f4       	brtc	.+2      	; 0x37c <__addsf3+0x28>
 37a:	e0 95       	com	r30
 37c:	e7 fb       	bst	r30, 7
 37e:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>

00000382 <__addsf3x>:
 382:	e9 2f       	mov	r30, r25
 384:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 388:	58 f3       	brcs	.-42     	; 0x360 <__addsf3+0xc>
 38a:	ba 17       	cp	r27, r26
 38c:	62 07       	cpc	r22, r18
 38e:	73 07       	cpc	r23, r19
 390:	84 07       	cpc	r24, r20
 392:	95 07       	cpc	r25, r21
 394:	20 f0       	brcs	.+8      	; 0x39e <__addsf3x+0x1c>
 396:	79 f4       	brne	.+30     	; 0x3b6 <__addsf3x+0x34>
 398:	a6 f5       	brtc	.+104    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 39a:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_zero>
 39e:	0e f4       	brtc	.+2      	; 0x3a2 <__addsf3x+0x20>
 3a0:	e0 95       	com	r30
 3a2:	0b 2e       	mov	r0, r27
 3a4:	ba 2f       	mov	r27, r26
 3a6:	a0 2d       	mov	r26, r0
 3a8:	0b 01       	movw	r0, r22
 3aa:	b9 01       	movw	r22, r18
 3ac:	90 01       	movw	r18, r0
 3ae:	0c 01       	movw	r0, r24
 3b0:	ca 01       	movw	r24, r20
 3b2:	a0 01       	movw	r20, r0
 3b4:	11 24       	eor	r1, r1
 3b6:	ff 27       	eor	r31, r31
 3b8:	59 1b       	sub	r21, r25
 3ba:	99 f0       	breq	.+38     	; 0x3e2 <__addsf3x+0x60>
 3bc:	59 3f       	cpi	r21, 0xF9	; 249
 3be:	50 f4       	brcc	.+20     	; 0x3d4 <__addsf3x+0x52>
 3c0:	50 3e       	cpi	r21, 0xE0	; 224
 3c2:	68 f1       	brcs	.+90     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3c4:	1a 16       	cp	r1, r26
 3c6:	f0 40       	sbci	r31, 0x00	; 0
 3c8:	a2 2f       	mov	r26, r18
 3ca:	23 2f       	mov	r18, r19
 3cc:	34 2f       	mov	r19, r20
 3ce:	44 27       	eor	r20, r20
 3d0:	58 5f       	subi	r21, 0xF8	; 248
 3d2:	f3 cf       	rjmp	.-26     	; 0x3ba <__addsf3x+0x38>
 3d4:	46 95       	lsr	r20
 3d6:	37 95       	ror	r19
 3d8:	27 95       	ror	r18
 3da:	a7 95       	ror	r26
 3dc:	f0 40       	sbci	r31, 0x00	; 0
 3de:	53 95       	inc	r21
 3e0:	c9 f7       	brne	.-14     	; 0x3d4 <__addsf3x+0x52>
 3e2:	7e f4       	brtc	.+30     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e4:	1f 16       	cp	r1, r31
 3e6:	ba 0b       	sbc	r27, r26
 3e8:	62 0b       	sbc	r22, r18
 3ea:	73 0b       	sbc	r23, r19
 3ec:	84 0b       	sbc	r24, r20
 3ee:	ba f0       	brmi	.+46     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f0:	91 50       	subi	r25, 0x01	; 1
 3f2:	a1 f0       	breq	.+40     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3f4:	ff 0f       	add	r31, r31
 3f6:	bb 1f       	adc	r27, r27
 3f8:	66 1f       	adc	r22, r22
 3fa:	77 1f       	adc	r23, r23
 3fc:	88 1f       	adc	r24, r24
 3fe:	c2 f7       	brpl	.-16     	; 0x3f0 <__addsf3x+0x6e>
 400:	0e c0       	rjmp	.+28     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 402:	ba 0f       	add	r27, r26
 404:	62 1f       	adc	r22, r18
 406:	73 1f       	adc	r23, r19
 408:	84 1f       	adc	r24, r20
 40a:	48 f4       	brcc	.+18     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 40c:	87 95       	ror	r24
 40e:	77 95       	ror	r23
 410:	67 95       	ror	r22
 412:	b7 95       	ror	r27
 414:	f7 95       	ror	r31
 416:	9e 3f       	cpi	r25, 0xFE	; 254
 418:	08 f0       	brcs	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41a:	b0 cf       	rjmp	.-160    	; 0x37c <__addsf3+0x28>
 41c:	93 95       	inc	r25
 41e:	88 0f       	add	r24, r24
 420:	08 f0       	brcs	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 422:	99 27       	eor	r25, r25
 424:	ee 0f       	add	r30, r30
 426:	97 95       	ror	r25
 428:	87 95       	ror	r24
 42a:	08 95       	ret

0000042c <__fixsfsi>:
 42c:	0e 94 1d 02 	call	0x43a	; 0x43a <__fixunssfsi>
 430:	68 94       	set
 432:	b1 11       	cpse	r27, r1
 434:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>
 438:	08 95       	ret

0000043a <__fixunssfsi>:
 43a:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_splitA>
 43e:	88 f0       	brcs	.+34     	; 0x462 <__fixunssfsi+0x28>
 440:	9f 57       	subi	r25, 0x7F	; 127
 442:	98 f0       	brcs	.+38     	; 0x46a <__fixunssfsi+0x30>
 444:	b9 2f       	mov	r27, r25
 446:	99 27       	eor	r25, r25
 448:	b7 51       	subi	r27, 0x17	; 23
 44a:	b0 f0       	brcs	.+44     	; 0x478 <__fixunssfsi+0x3e>
 44c:	e1 f0       	breq	.+56     	; 0x486 <__fixunssfsi+0x4c>
 44e:	66 0f       	add	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	88 1f       	adc	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	1a f0       	brmi	.+6      	; 0x45e <__fixunssfsi+0x24>
 458:	ba 95       	dec	r27
 45a:	c9 f7       	brne	.-14     	; 0x44e <__fixunssfsi+0x14>
 45c:	14 c0       	rjmp	.+40     	; 0x486 <__fixunssfsi+0x4c>
 45e:	b1 30       	cpi	r27, 0x01	; 1
 460:	91 f0       	breq	.+36     	; 0x486 <__fixunssfsi+0x4c>
 462:	0e 94 2b 03 	call	0x656	; 0x656 <__fp_zero>
 466:	b1 e0       	ldi	r27, 0x01	; 1
 468:	08 95       	ret
 46a:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_zero>
 46e:	67 2f       	mov	r22, r23
 470:	78 2f       	mov	r23, r24
 472:	88 27       	eor	r24, r24
 474:	b8 5f       	subi	r27, 0xF8	; 248
 476:	39 f0       	breq	.+14     	; 0x486 <__fixunssfsi+0x4c>
 478:	b9 3f       	cpi	r27, 0xF9	; 249
 47a:	cc f3       	brlt	.-14     	; 0x46e <__fixunssfsi+0x34>
 47c:	86 95       	lsr	r24
 47e:	77 95       	ror	r23
 480:	67 95       	ror	r22
 482:	b3 95       	inc	r27
 484:	d9 f7       	brne	.-10     	; 0x47c <__fixunssfsi+0x42>
 486:	3e f4       	brtc	.+14     	; 0x496 <__fixunssfsi+0x5c>
 488:	90 95       	com	r25
 48a:	80 95       	com	r24
 48c:	70 95       	com	r23
 48e:	61 95       	neg	r22
 490:	7f 4f       	sbci	r23, 0xFF	; 255
 492:	8f 4f       	sbci	r24, 0xFF	; 255
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	08 95       	ret

00000498 <__floatunsisf>:
 498:	e8 94       	clt
 49a:	09 c0       	rjmp	.+18     	; 0x4ae <__floatsisf+0x12>

0000049c <__floatsisf>:
 49c:	97 fb       	bst	r25, 7
 49e:	3e f4       	brtc	.+14     	; 0x4ae <__floatsisf+0x12>
 4a0:	90 95       	com	r25
 4a2:	80 95       	com	r24
 4a4:	70 95       	com	r23
 4a6:	61 95       	neg	r22
 4a8:	7f 4f       	sbci	r23, 0xFF	; 255
 4aa:	8f 4f       	sbci	r24, 0xFF	; 255
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	99 23       	and	r25, r25
 4b0:	a9 f0       	breq	.+42     	; 0x4dc <__floatsisf+0x40>
 4b2:	f9 2f       	mov	r31, r25
 4b4:	96 e9       	ldi	r25, 0x96	; 150
 4b6:	bb 27       	eor	r27, r27
 4b8:	93 95       	inc	r25
 4ba:	f6 95       	lsr	r31
 4bc:	87 95       	ror	r24
 4be:	77 95       	ror	r23
 4c0:	67 95       	ror	r22
 4c2:	b7 95       	ror	r27
 4c4:	f1 11       	cpse	r31, r1
 4c6:	f8 cf       	rjmp	.-16     	; 0x4b8 <__floatsisf+0x1c>
 4c8:	fa f4       	brpl	.+62     	; 0x508 <__floatsisf+0x6c>
 4ca:	bb 0f       	add	r27, r27
 4cc:	11 f4       	brne	.+4      	; 0x4d2 <__floatsisf+0x36>
 4ce:	60 ff       	sbrs	r22, 0
 4d0:	1b c0       	rjmp	.+54     	; 0x508 <__floatsisf+0x6c>
 4d2:	6f 5f       	subi	r22, 0xFF	; 255
 4d4:	7f 4f       	sbci	r23, 0xFF	; 255
 4d6:	8f 4f       	sbci	r24, 0xFF	; 255
 4d8:	9f 4f       	sbci	r25, 0xFF	; 255
 4da:	16 c0       	rjmp	.+44     	; 0x508 <__floatsisf+0x6c>
 4dc:	88 23       	and	r24, r24
 4de:	11 f0       	breq	.+4      	; 0x4e4 <__floatsisf+0x48>
 4e0:	96 e9       	ldi	r25, 0x96	; 150
 4e2:	11 c0       	rjmp	.+34     	; 0x506 <__floatsisf+0x6a>
 4e4:	77 23       	and	r23, r23
 4e6:	21 f0       	breq	.+8      	; 0x4f0 <__floatsisf+0x54>
 4e8:	9e e8       	ldi	r25, 0x8E	; 142
 4ea:	87 2f       	mov	r24, r23
 4ec:	76 2f       	mov	r23, r22
 4ee:	05 c0       	rjmp	.+10     	; 0x4fa <__floatsisf+0x5e>
 4f0:	66 23       	and	r22, r22
 4f2:	71 f0       	breq	.+28     	; 0x510 <__floatsisf+0x74>
 4f4:	96 e8       	ldi	r25, 0x86	; 134
 4f6:	86 2f       	mov	r24, r22
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	60 e0       	ldi	r22, 0x00	; 0
 4fc:	2a f0       	brmi	.+10     	; 0x508 <__floatsisf+0x6c>
 4fe:	9a 95       	dec	r25
 500:	66 0f       	add	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	88 1f       	adc	r24, r24
 506:	da f7       	brpl	.-10     	; 0x4fe <__floatsisf+0x62>
 508:	88 0f       	add	r24, r24
 50a:	96 95       	lsr	r25
 50c:	87 95       	ror	r24
 50e:	97 f9       	bld	r25, 7
 510:	08 95       	ret

00000512 <floor>:
 512:	0e 94 13 03 	call	0x626	; 0x626 <__fp_trunc>
 516:	90 f0       	brcs	.+36     	; 0x53c <floor+0x2a>
 518:	9f 37       	cpi	r25, 0x7F	; 127
 51a:	48 f4       	brcc	.+18     	; 0x52e <floor+0x1c>
 51c:	91 11       	cpse	r25, r1
 51e:	16 f0       	brts	.+4      	; 0x524 <floor+0x12>
 520:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	80 e8       	ldi	r24, 0x80	; 128
 52a:	9f eb       	ldi	r25, 0xBF	; 191
 52c:	08 95       	ret
 52e:	26 f4       	brtc	.+8      	; 0x538 <floor+0x26>
 530:	1b 16       	cp	r1, r27
 532:	61 1d       	adc	r22, r1
 534:	71 1d       	adc	r23, r1
 536:	81 1d       	adc	r24, r1
 538:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__fp_mintl>
 53c:	0c 94 c1 02 	jmp	0x582	; 0x582 <__fp_mpack>

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_mintl>:
 54c:	88 23       	and	r24, r24
 54e:	71 f4       	brne	.+28     	; 0x56c <__fp_mintl+0x20>
 550:	77 23       	and	r23, r23
 552:	21 f0       	breq	.+8      	; 0x55c <__fp_mintl+0x10>
 554:	98 50       	subi	r25, 0x08	; 8
 556:	87 2b       	or	r24, r23
 558:	76 2f       	mov	r23, r22
 55a:	07 c0       	rjmp	.+14     	; 0x56a <__fp_mintl+0x1e>
 55c:	66 23       	and	r22, r22
 55e:	11 f4       	brne	.+4      	; 0x564 <__fp_mintl+0x18>
 560:	99 27       	eor	r25, r25
 562:	0d c0       	rjmp	.+26     	; 0x57e <__fp_mintl+0x32>
 564:	90 51       	subi	r25, 0x10	; 16
 566:	86 2b       	or	r24, r22
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	2a f0       	brmi	.+10     	; 0x578 <__fp_mintl+0x2c>
 56e:	9a 95       	dec	r25
 570:	66 0f       	add	r22, r22
 572:	77 1f       	adc	r23, r23
 574:	88 1f       	adc	r24, r24
 576:	da f7       	brpl	.-10     	; 0x56e <__fp_mintl+0x22>
 578:	88 0f       	add	r24, r24
 57a:	96 95       	lsr	r25
 57c:	87 95       	ror	r24
 57e:	97 f9       	bld	r25, 7
 580:	08 95       	ret

00000582 <__fp_mpack>:
 582:	9f 3f       	cpi	r25, 0xFF	; 255
 584:	31 f0       	breq	.+12     	; 0x592 <__fp_mpack_finite+0xc>

00000586 <__fp_mpack_finite>:
 586:	91 50       	subi	r25, 0x01	; 1
 588:	20 f4       	brcc	.+8      	; 0x592 <__fp_mpack_finite+0xc>
 58a:	87 95       	ror	r24
 58c:	77 95       	ror	r23
 58e:	67 95       	ror	r22
 590:	b7 95       	ror	r27
 592:	88 0f       	add	r24, r24
 594:	91 1d       	adc	r25, r1
 596:	96 95       	lsr	r25
 598:	87 95       	ror	r24
 59a:	97 f9       	bld	r25, 7
 59c:	08 95       	ret

0000059e <__fp_nan>:
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	80 ec       	ldi	r24, 0xC0	; 192
 5a2:	08 95       	ret

000005a4 <__fp_pscA>:
 5a4:	00 24       	eor	r0, r0
 5a6:	0a 94       	dec	r0
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	09 06       	cpc	r0, r25
 5b0:	08 95       	ret

000005b2 <__fp_pscB>:
 5b2:	00 24       	eor	r0, r0
 5b4:	0a 94       	dec	r0
 5b6:	12 16       	cp	r1, r18
 5b8:	13 06       	cpc	r1, r19
 5ba:	14 06       	cpc	r1, r20
 5bc:	05 06       	cpc	r0, r21
 5be:	08 95       	ret

000005c0 <__fp_round>:
 5c0:	09 2e       	mov	r0, r25
 5c2:	03 94       	inc	r0
 5c4:	00 0c       	add	r0, r0
 5c6:	11 f4       	brne	.+4      	; 0x5cc <__fp_round+0xc>
 5c8:	88 23       	and	r24, r24
 5ca:	52 f0       	brmi	.+20     	; 0x5e0 <__fp_round+0x20>
 5cc:	bb 0f       	add	r27, r27
 5ce:	40 f4       	brcc	.+16     	; 0x5e0 <__fp_round+0x20>
 5d0:	bf 2b       	or	r27, r31
 5d2:	11 f4       	brne	.+4      	; 0x5d8 <__fp_round+0x18>
 5d4:	60 ff       	sbrs	r22, 0
 5d6:	04 c0       	rjmp	.+8      	; 0x5e0 <__fp_round+0x20>
 5d8:	6f 5f       	subi	r22, 0xFF	; 255
 5da:	7f 4f       	sbci	r23, 0xFF	; 255
 5dc:	8f 4f       	sbci	r24, 0xFF	; 255
 5de:	9f 4f       	sbci	r25, 0xFF	; 255
 5e0:	08 95       	ret

000005e2 <__fp_split3>:
 5e2:	57 fd       	sbrc	r21, 7
 5e4:	90 58       	subi	r25, 0x80	; 128
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	59 f0       	breq	.+22     	; 0x602 <__fp_splitA+0x10>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	71 f0       	breq	.+28     	; 0x60c <__fp_splitA+0x1a>
 5f0:	47 95       	ror	r20

000005f2 <__fp_splitA>:
 5f2:	88 0f       	add	r24, r24
 5f4:	97 fb       	bst	r25, 7
 5f6:	99 1f       	adc	r25, r25
 5f8:	61 f0       	breq	.+24     	; 0x612 <__fp_splitA+0x20>
 5fa:	9f 3f       	cpi	r25, 0xFF	; 255
 5fc:	79 f0       	breq	.+30     	; 0x61c <__fp_splitA+0x2a>
 5fe:	87 95       	ror	r24
 600:	08 95       	ret
 602:	12 16       	cp	r1, r18
 604:	13 06       	cpc	r1, r19
 606:	14 06       	cpc	r1, r20
 608:	55 1f       	adc	r21, r21
 60a:	f2 cf       	rjmp	.-28     	; 0x5f0 <__fp_split3+0xe>
 60c:	46 95       	lsr	r20
 60e:	f1 df       	rcall	.-30     	; 0x5f2 <__fp_splitA>
 610:	08 c0       	rjmp	.+16     	; 0x622 <__fp_splitA+0x30>
 612:	16 16       	cp	r1, r22
 614:	17 06       	cpc	r1, r23
 616:	18 06       	cpc	r1, r24
 618:	99 1f       	adc	r25, r25
 61a:	f1 cf       	rjmp	.-30     	; 0x5fe <__fp_splitA+0xc>
 61c:	86 95       	lsr	r24
 61e:	71 05       	cpc	r23, r1
 620:	61 05       	cpc	r22, r1
 622:	08 94       	sec
 624:	08 95       	ret

00000626 <__fp_trunc>:
 626:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <__fp_splitA>
 62a:	a0 f0       	brcs	.+40     	; 0x654 <__fp_trunc+0x2e>
 62c:	be e7       	ldi	r27, 0x7E	; 126
 62e:	b9 17       	cp	r27, r25
 630:	88 f4       	brcc	.+34     	; 0x654 <__fp_trunc+0x2e>
 632:	bb 27       	eor	r27, r27
 634:	9f 38       	cpi	r25, 0x8F	; 143
 636:	60 f4       	brcc	.+24     	; 0x650 <__fp_trunc+0x2a>
 638:	16 16       	cp	r1, r22
 63a:	b1 1d       	adc	r27, r1
 63c:	67 2f       	mov	r22, r23
 63e:	78 2f       	mov	r23, r24
 640:	88 27       	eor	r24, r24
 642:	98 5f       	subi	r25, 0xF8	; 248
 644:	f7 cf       	rjmp	.-18     	; 0x634 <__fp_trunc+0xe>
 646:	86 95       	lsr	r24
 648:	77 95       	ror	r23
 64a:	67 95       	ror	r22
 64c:	b1 1d       	adc	r27, r1
 64e:	93 95       	inc	r25
 650:	96 39       	cpi	r25, 0x96	; 150
 652:	c8 f3       	brcs	.-14     	; 0x646 <__fp_trunc+0x20>
 654:	08 95       	ret

00000656 <__fp_zero>:
 656:	e8 94       	clt

00000658 <__fp_szero>:
 658:	bb 27       	eor	r27, r27
 65a:	66 27       	eor	r22, r22
 65c:	77 27       	eor	r23, r23
 65e:	cb 01       	movw	r24, r22
 660:	97 f9       	bld	r25, 7
 662:	08 95       	ret

00000664 <__mulsf3>:
 664:	0e 94 45 03 	call	0x68a	; 0x68a <__mulsf3x>
 668:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_round>
 66c:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <__fp_pscA>
 670:	38 f0       	brcs	.+14     	; 0x680 <__mulsf3+0x1c>
 672:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_pscB>
 676:	20 f0       	brcs	.+8      	; 0x680 <__mulsf3+0x1c>
 678:	95 23       	and	r25, r21
 67a:	11 f0       	breq	.+4      	; 0x680 <__mulsf3+0x1c>
 67c:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 680:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__fp_nan>
 684:	11 24       	eor	r1, r1
 686:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>

0000068a <__mulsf3x>:
 68a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__fp_split3>
 68e:	70 f3       	brcs	.-36     	; 0x66c <__mulsf3+0x8>

00000690 <__mulsf3_pse>:
 690:	95 9f       	mul	r25, r21
 692:	c1 f3       	breq	.-16     	; 0x684 <__mulsf3+0x20>
 694:	95 0f       	add	r25, r21
 696:	50 e0       	ldi	r21, 0x00	; 0
 698:	55 1f       	adc	r21, r21
 69a:	62 9f       	mul	r22, r18
 69c:	f0 01       	movw	r30, r0
 69e:	72 9f       	mul	r23, r18
 6a0:	bb 27       	eor	r27, r27
 6a2:	f0 0d       	add	r31, r0
 6a4:	b1 1d       	adc	r27, r1
 6a6:	63 9f       	mul	r22, r19
 6a8:	aa 27       	eor	r26, r26
 6aa:	f0 0d       	add	r31, r0
 6ac:	b1 1d       	adc	r27, r1
 6ae:	aa 1f       	adc	r26, r26
 6b0:	64 9f       	mul	r22, r20
 6b2:	66 27       	eor	r22, r22
 6b4:	b0 0d       	add	r27, r0
 6b6:	a1 1d       	adc	r26, r1
 6b8:	66 1f       	adc	r22, r22
 6ba:	82 9f       	mul	r24, r18
 6bc:	22 27       	eor	r18, r18
 6be:	b0 0d       	add	r27, r0
 6c0:	a1 1d       	adc	r26, r1
 6c2:	62 1f       	adc	r22, r18
 6c4:	73 9f       	mul	r23, r19
 6c6:	b0 0d       	add	r27, r0
 6c8:	a1 1d       	adc	r26, r1
 6ca:	62 1f       	adc	r22, r18
 6cc:	83 9f       	mul	r24, r19
 6ce:	a0 0d       	add	r26, r0
 6d0:	61 1d       	adc	r22, r1
 6d2:	22 1f       	adc	r18, r18
 6d4:	74 9f       	mul	r23, r20
 6d6:	33 27       	eor	r19, r19
 6d8:	a0 0d       	add	r26, r0
 6da:	61 1d       	adc	r22, r1
 6dc:	23 1f       	adc	r18, r19
 6de:	84 9f       	mul	r24, r20
 6e0:	60 0d       	add	r22, r0
 6e2:	21 1d       	adc	r18, r1
 6e4:	82 2f       	mov	r24, r18
 6e6:	76 2f       	mov	r23, r22
 6e8:	6a 2f       	mov	r22, r26
 6ea:	11 24       	eor	r1, r1
 6ec:	9f 57       	subi	r25, 0x7F	; 127
 6ee:	50 40       	sbci	r21, 0x00	; 0
 6f0:	9a f0       	brmi	.+38     	; 0x718 <__mulsf3_pse+0x88>
 6f2:	f1 f0       	breq	.+60     	; 0x730 <__mulsf3_pse+0xa0>
 6f4:	88 23       	and	r24, r24
 6f6:	4a f0       	brmi	.+18     	; 0x70a <__mulsf3_pse+0x7a>
 6f8:	ee 0f       	add	r30, r30
 6fa:	ff 1f       	adc	r31, r31
 6fc:	bb 1f       	adc	r27, r27
 6fe:	66 1f       	adc	r22, r22
 700:	77 1f       	adc	r23, r23
 702:	88 1f       	adc	r24, r24
 704:	91 50       	subi	r25, 0x01	; 1
 706:	50 40       	sbci	r21, 0x00	; 0
 708:	a9 f7       	brne	.-22     	; 0x6f4 <__mulsf3_pse+0x64>
 70a:	9e 3f       	cpi	r25, 0xFE	; 254
 70c:	51 05       	cpc	r21, r1
 70e:	80 f0       	brcs	.+32     	; 0x730 <__mulsf3_pse+0xa0>
 710:	0c 94 a0 02 	jmp	0x540	; 0x540 <__fp_inf>
 714:	0c 94 2c 03 	jmp	0x658	; 0x658 <__fp_szero>
 718:	5f 3f       	cpi	r21, 0xFF	; 255
 71a:	e4 f3       	brlt	.-8      	; 0x714 <__mulsf3_pse+0x84>
 71c:	98 3e       	cpi	r25, 0xE8	; 232
 71e:	d4 f3       	brlt	.-12     	; 0x714 <__mulsf3_pse+0x84>
 720:	86 95       	lsr	r24
 722:	77 95       	ror	r23
 724:	67 95       	ror	r22
 726:	b7 95       	ror	r27
 728:	f7 95       	ror	r31
 72a:	e7 95       	ror	r30
 72c:	9f 5f       	subi	r25, 0xFF	; 255
 72e:	c1 f7       	brne	.-16     	; 0x720 <__mulsf3_pse+0x90>
 730:	fe 2b       	or	r31, r30
 732:	88 0f       	add	r24, r24
 734:	91 1d       	adc	r25, r1
 736:	96 95       	lsr	r25
 738:	87 95       	ror	r24
 73a:	97 f9       	bld	r25, 7
 73c:	08 95       	ret

0000073e <__itoa_ncheck>:
 73e:	bb 27       	eor	r27, r27
 740:	4a 30       	cpi	r20, 0x0A	; 10
 742:	31 f4       	brne	.+12     	; 0x750 <__itoa_ncheck+0x12>
 744:	99 23       	and	r25, r25
 746:	22 f4       	brpl	.+8      	; 0x750 <__itoa_ncheck+0x12>
 748:	bd e2       	ldi	r27, 0x2D	; 45
 74a:	90 95       	com	r25
 74c:	81 95       	neg	r24
 74e:	9f 4f       	sbci	r25, 0xFF	; 255
 750:	0c 94 ab 03 	jmp	0x756	; 0x756 <__utoa_common>

00000754 <__utoa_ncheck>:
 754:	bb 27       	eor	r27, r27

00000756 <__utoa_common>:
 756:	fb 01       	movw	r30, r22
 758:	55 27       	eor	r21, r21
 75a:	aa 27       	eor	r26, r26
 75c:	88 0f       	add	r24, r24
 75e:	99 1f       	adc	r25, r25
 760:	aa 1f       	adc	r26, r26
 762:	a4 17       	cp	r26, r20
 764:	10 f0       	brcs	.+4      	; 0x76a <__utoa_common+0x14>
 766:	a4 1b       	sub	r26, r20
 768:	83 95       	inc	r24
 76a:	50 51       	subi	r21, 0x10	; 16
 76c:	b9 f7       	brne	.-18     	; 0x75c <__utoa_common+0x6>
 76e:	a0 5d       	subi	r26, 0xD0	; 208
 770:	aa 33       	cpi	r26, 0x3A	; 58
 772:	08 f0       	brcs	.+2      	; 0x776 <__utoa_common+0x20>
 774:	a9 5d       	subi	r26, 0xD9	; 217
 776:	a1 93       	st	Z+, r26
 778:	00 97       	sbiw	r24, 0x00	; 0
 77a:	79 f7       	brne	.-34     	; 0x75a <__utoa_common+0x4>
 77c:	b1 11       	cpse	r27, r1
 77e:	b1 93       	st	Z+, r27
 780:	11 92       	st	Z+, r1
 782:	cb 01       	movw	r24, r22
 784:	0c 94 c4 03 	jmp	0x788	; 0x788 <strrev>

00000788 <strrev>:
 788:	dc 01       	movw	r26, r24
 78a:	fc 01       	movw	r30, r24
 78c:	67 2f       	mov	r22, r23
 78e:	71 91       	ld	r23, Z+
 790:	77 23       	and	r23, r23
 792:	e1 f7       	brne	.-8      	; 0x78c <strrev+0x4>
 794:	32 97       	sbiw	r30, 0x02	; 2
 796:	04 c0       	rjmp	.+8      	; 0x7a0 <strrev+0x18>
 798:	7c 91       	ld	r23, X
 79a:	6d 93       	st	X+, r22
 79c:	70 83       	st	Z, r23
 79e:	62 91       	ld	r22, -Z
 7a0:	ae 17       	cp	r26, r30
 7a2:	bf 07       	cpc	r27, r31
 7a4:	c8 f3       	brcs	.-14     	; 0x798 <strrev+0x10>
 7a6:	08 95       	ret

000007a8 <_exit>:
 7a8:	f8 94       	cli

000007aa <__stop_program>:
 7aa:	ff cf       	rjmp	.-2      	; 0x7aa <__stop_program>
